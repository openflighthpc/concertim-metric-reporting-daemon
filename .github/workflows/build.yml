on:
  push:
    branches: [main]
    paths-ignore: ['docs/**']
  pull_request:
    branches: [main]
    paths-ignore: ['docs/**']
  schedule:
  - cron: '0 07 * * 1' # run "At 07:00 on Monday"
  workflow_call:
    inputs:
      skipTests:
        description: 'Skip tests, useful when there is a dedicated CI job for tests'
        default: false
        required: false
        type: boolean

name: Build
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      fail-fast: true
      matrix:
        # go: ['1.18.x', 'stable', 'oldstable']
        # os: ['ubuntu-22.04', 'ubuntu-latest']
        go-version: [1.18.x, 1.19.x]
        os: [ubuntu-22.04]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Mod Verify
        run: go mod verify

      # XXX Needs tools installing: go-enum and goverter.
      # - name: Go Generate
      #   run: go generate ./... && git diff --exit-code

      - name: Go Build
        run: go build -o /dev/null ./...

      - name: Go Compile Tests
        if: ${{ inputs.skipTests }}
        run: go test -exec /bin/true ./...

      - name: Go Test
        if: ${{ !inputs.skipTests }}
        # run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt ./...
        run: go test -v -count=1 -race -shuffle=on ./...

      - name: Go Benchmark
        if: ${{ !inputs.skipTests }}
        run: go test -v -shuffle=on -run=- -bench=. -benchtime=1x ./...

      # - name: Upload Coverage
      #   if: ${{ !inputs.skipTests }}
      #   uses: codecov/codecov-action@v3
      #   continue-on-error: true
      #   with:
      #     token: ${{secrets.CODECOV_TOKEN}}
      #     file: ./coverage.txt
      #     fail_ci_if_error: false
