# Configuration using canned responses for the data source map.
#
# During normal operation, metric reporting daemon will connect to ct
# visualisation app retrieve the data source map. This configuration replaces
# that connection with processing of canned responses.  This can be
# convenient when developing the daemon outside of a full concertim setup.

# Configuration for the HTTP API.
api:
  # The address of the network interface to listen on.
  ip: "0.0.0.0"

  # The port to listen on.
  port: 3000

  # Timeouts for server to process a request.
  #
  # read_timeout limits the time that the server will spend waiting for the
  # client to send its full request.
  #
  # write_timeout limits the time that the server will spend waiting for itself
  # to finish serving the request.
  #
  # idle_timeout limits the time before the server reuses keep alive
  # connections.
  #
  # Requires a number and unit, e.g., `60s` for sixty seconds or `1h10m20s` for
  # one hour ten minutes and twenty seconds.
  # Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”.
  read_timeout: 100ms
  write_timeout: 10s
  idle_timeout: 120s

# Configuration for generating the data source map lookup.
dsm:
  # The data source map is periodically updated from the Concertim
  # Visualisation App. `frequency` specifies the frequency of the periodic
  # updating.
  #
  # Certain events can cause the data source map to update outside of its
  # periodic updating.  To prevent over consumption of resources, the updates
  # can be throttled such that no two updates will occur within `throttle` of
  # each other.
  #
  # Both the `frequency` and `throttle` values require a number and unit, e.g.,
  # `60s` for sixty seconds or `1h10m20s` for one hour ten minutes and twenty
  # seconds.
  #
  # Valid time units are “ns”, “us” (or “µs”), “ms”, “s”, “m”, “h”.
  frequency: 30s
  throttle: 10s

  # If this values is given and is not an empty string, the data source map
  # will be read from this file instead of polling the Concertim Visualisation
  # App. Relative paths are relative to the working directory of the running
  # process.
  testdata: "./testdata/dsm.json"

# Configuration for accessing the Concertim Visualization App (aka Visualizer)
# API.
visualizer_api:
  # The URL used for gaining an authentication token.
  auth_url: "https://localhost:9445/users/sign_in.json"
  # The authentication credentials.
  username: "admin"
  password: "admin"
  # The URL used to obtain the data source maps.
  data_source_map_url: "https://localhost:9445/api/v1/data-source-maps"
  # If set to true skip all TLS certificate verification checks.
  skip_certificate_check: true

# Configuration for retrieving historic metrics with RRDTool.  Currently, the
# RRD files are created by Ganglia's Gmetad.  These values must be consistent
# with how Gmetad has been configured.
rrd:
  # The ganglia grid from which to retrieve historic metrics.  All other grids
  # are ignored.
  grid_name: "unspecified"

  # The ganglia cluster from which to retrieve historic hosts.  All other
  # clusters are ignored.
  cluster_name: "unspecified"

  # Directory where the RRD files are stored.
  # directory: /var/lib/ganglia/rrds/
  directory: testdata/rrds/

  # Path to the RRDTool executable.
  rrd_tool_path: /usr/bin/rrdtool

  # How frequently metrics are reported to this daemon.
  step: 15s

  archives:
    - "RRA:AVERAGE:0.5:15s:1h"
    - "RRA:AVERAGE:0.5:5m:1d"
    - "RRA:AVERAGE:0.5:1h:90d"
    - "RRA:MIN:0.5:15s:1h"
    - "RRA:MIN:0.5:5m:1d"
    - "RRA:MIN:0.5:1h:90d"
    - "RRA:MAX:0.5:15s:1h"
    - "RRA:MAX:0.5:5m:1d"
    - "RRA:MAX:0.5:1h:90d"

log_level: info
shared_secret_file: "./testdata/secret.dev"
