// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

package memory

import (
	domain "github.com/alces-flight/concertim-mrapi/domain"
	"time"
)

type ConverterImpl struct{}

func (c *ConverterImpl) DomainFromModelHost(source HostModel) domain.Host {
	var domainHost domain.Host
	domainHost.Name = source.Name
	domainHost.Reported = ConvertTime(source.Reported)
	domainHost.TMax = time.Duration(source.TMax)
	domainHost.DMax = time.Duration(source.DMax)
	domainHost.Metrics = DefaultMetrics()
	return domainHost
}
func (c *ConverterImpl) DomainFromModelMetric(source MetricModel) domain.Metric {
	var domainMetric domain.Metric
	domainMetric.Name = source.Name
	domainMetric.Val = source.Val
	domainMetric.Units = source.Units
	domainMetric.Slope = domain.MetricSlope(source.Slope)
	domainMetric.Tn = time.Duration(source.Tn)
	domainMetric.TMax = time.Duration(source.TMax)
	domainMetric.DMax = time.Duration(source.DMax)
	domainMetric.Source = source.Source
	domainMetric.Type = domain.MetricType(source.Type)
	return domainMetric
}
func (c *ConverterImpl) ModelFromDomainHost(source domain.Host) HostModel {
	var memoryHostModel HostModel
	memoryHostModel.Name = source.Name
	memoryHostModel.Reported = ConvertTime(source.Reported)
	memoryHostModel.TMax = time.Duration(source.TMax)
	memoryHostModel.DMax = time.Duration(source.DMax)
	return memoryHostModel
}
func (c *ConverterImpl) ModelFromDomainMetric(source domain.Metric) MetricModel {
	var memoryMetricModel MetricModel
	memoryMetricModel.Name = source.Name
	memoryMetricModel.Val = source.Val
	memoryMetricModel.Units = source.Units
	memoryMetricModel.Slope = domain.MetricSlope(source.Slope)
	memoryMetricModel.Tn = time.Duration(source.Tn)
	memoryMetricModel.TMax = time.Duration(source.TMax)
	memoryMetricModel.DMax = time.Duration(source.DMax)
	memoryMetricModel.Source = source.Source
	memoryMetricModel.Type = domain.MetricType(source.Type)
	return memoryMetricModel
}
