// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

package memory

import (
	domain "github.com/alces-flight/concertim-metric-reporting-daemon/domain"
	"time"
)

type ConverterImpl struct{}

func (c *ConverterImpl) DomainFromModelHost(source HostModel) domain.ReportedHost {
	var domainHost domain.ReportedHost
	domainHost.Id = domain.HostId(source.DeviceId)
	domainHost.DSM = DSMNameToDSM(source.DSMName)
	domainHost.Reported = ConvertTime(source.Reported)
	domainHost.DMax = time.Duration(source.DMax)
	domainHost.Metrics = DefaultMetrics()
	return domainHost
}
func (c *ConverterImpl) DomainFromModelMetric(source MetricModel) domain.ReportedMetric {
	var domainMetric domain.ReportedMetric
	domainMetric.Name = source.Name
	domainMetric.Value = source.Val
	domainMetric.Units = source.Units
	domainMetric.Slope = domain.MetricSlope(source.Slope)
	domainMetric.Reported = ConvertTime(source.Reported)
	domainMetric.DMax = time.Duration(source.DMax)
	domainMetric.Type = domain.MetricType(source.Type)
	return domainMetric
}
func (c *ConverterImpl) ModelFromDomainHost(source domain.ReportedHost) HostModel {
	var memoryHostModel HostModel
	memoryHostModel.DeviceId = string(source.Id)
	memoryHostModel.DSMName = source.DSM.HostName
	memoryHostModel.Reported = ConvertTime(source.Reported)
	memoryHostModel.DMax = time.Duration(source.DMax)
	return memoryHostModel
}
func (c *ConverterImpl) ModelFromDomainMetric(source domain.ReportedMetric) MetricModel {
	var memoryMetricModel MetricModel
	memoryMetricModel.Name = source.Name
	memoryMetricModel.Val = source.Value
	memoryMetricModel.Units = source.Units
	memoryMetricModel.Slope = domain.MetricSlope(source.Slope)
	memoryMetricModel.Reported = ConvertTime(source.Reported)
	memoryMetricModel.DMax = time.Duration(source.DMax)
	memoryMetricModel.Type = domain.MetricType(source.Type)
	return memoryMetricModel
}
